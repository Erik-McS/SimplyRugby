CREATE TABLE IF NOT EXISTS player_doctors(
	DOCTOR_ID INTEGER PRIMARY KEY,
	NAME TEXT NOT NULL,
	SURNAME TEXT NOT NULL,
	TELEPHONE TEXT NOT NULL
);

CREATE TABLE IF NOT EXISTS next_of_kin (
	KIN_ID INTEGER PRIMARY KEY,
	NAME TEXT NOT NULL,
	SURNAME TEXT NOT NULL,
	TELEPHONE TEXT NOT NULL
);

CREATE TABLE IF NOT EXISTS players (
	PLAYER_ID INTEGER PRIMARY KEY,
	FIRST_NAME TEXT NOT NULL,
	SURNAME TEXT NOT NULL,
	ADDRESS TEXT NOT NULL,
	DATE_OF_BIRTH TEXT NOT NULL,
	GENDER TEXT NOT NULL,
	TELEPHONE TEXT,
	EMAIL TEXT NOT NULL,
	SCRUMS_NUMBER INTEGER NOT NULL UNIQUE,
	IS_ASSIGNED_TO_SQUAD TEXT NOT NULL,
	DOCTOR_ID INTEGER NOT NULL,
	KIN_ID INTEGER NOT NULL,
	FOREIGN KEY(DOCTOR_ID)
		REFERENCES player_doctors(DOCTOR_ID),
	FOREIGN KEY(KIN_ID)
		REFERENCES next_of_kin(KIN_ID)
);

CREATE TABLE IF NOT EXISTS non_players_roles(
	ROLE_ID INTEGER PRIMARY KEY,
	ROLE_DESCRIPTION TEXT NOT NULL
);

CREATE TABLE IF NOT EXISTS non_players(
	MEMBER_ID INTEGER PRIMARY KEY,
	FIRST_NAME TEXT NOT NULL,
	SURNAME TEXT NOT NULL,
	ADDRESS TEXT NOT NULL,
	TELEPHONE TEXT NOT NULL,
	EMAIL TEXT NOT NULL,
	ROLE_ID INTEGER NOT NULL,
	FOREIGN KEY(ROLE_ID)
		REFERENCES non_players_roles(ROLE_ID)
);

CREATE TABLE IF NOT EXISTS squad_coaches(
	COGROUP_ID INTEGER PRIMARY KEY,
    COACH_1 INTEGER NOT NULL,
    COACH_2 INTEGER NOT NULL,
    COACH_3 INTEGER NOT NULL,
    FOREIGN KEY(COACH_1) REFERENCES non_players(MEMBER_ID),
    FOREIGN KEY(COACH_2) REFERENCES non_players(MEMBER_ID),
    FOREIGN KEY(COACH_3) REFERENCES non_players(MEMBER_ID)
);

CREATE TABLE IF NOT EXISTS squad_admin_team(
    ADTEAM_ID INTEGER PRIMARY KEY,
    CHAIRMAN INTEGER NOT NULL,
    FIXTURE_SEC INTEGER NOT NULL,
    FOREIGN KEY(CHAIRMAN) REFERENCES non_players(MEMBER_ID),
    FOREIGN KEY(FIXTURE_SEC) REFERENCES non_players(MEMBER_ID)
);

CREATE TABLE IF NOT EXISTS replacement_team(
    REPTEAM_ID INTEGER PRIMARY KEY,
    PLAYER_1 INTEGER NOT NULL,
    PLAYER_2 INTEGER NOT NULL,
    PLAYER_3 INTEGER NOT NULL,
    PLAYER_4 INTEGER NOT NULL,
    PLAYER_5 INTEGER NOT NULL,
    FOREIGN KEY(PLAYER_1) REFERENCES players(PLAYER_ID),
    FOREIGN KEY(PLAYER_2) REFERENCES players(PLAYER_ID),
    FOREIGN KEY(PLAYER_3) REFERENCES players(PLAYER_ID),
    FOREIGN KEY(PLAYER_4) REFERENCES players(PLAYER_ID),
    FOREIGN KEY(PLAYER_5) REFERENCES players(PLAYER_ID)
);

CREATE TABLE IF NOT EXISTS senior_squads(
    SQUAD_ID INTEGER PRIMARY KEY,
    SQUAD_NAME TEXT NOT NULL,
    LOOSE_HEAD_PROP INTEGER NOT NULL UNIQUE,
    HOOKER INTEGER NOT NULL UNIQUE,
    TIGHT_HEAD_PROP INTEGER NOT NULL UNIQUE,
    SECOND_ROW INTEGER NOT NULL UNIQUE,
    SECOND_ROW2 INTEGER NOT NULL UNIQUE,
    BLIND_SIDE_FLANKER INTEGER NOT NULL UNIQUE,
    OPEN_SIDE_FLANKER INTEGER NOT NULL UNIQUE,
    NUMBER_8 INTEGER NOT NULL UNIQUE,
    SCRUM_HALF INTEGER NOT NULL UNIQUE,
    FLY_HALF INTEGER NOT NULL UNIQUE,
    LEFT_WING INTEGER NOT NULL UNIQUE,
    INSIDE_CENTRE INTEGER NOT NULL UNIQUE,
    OUTSIDE_CENTER INTEGER NOT NULL UNIQUE,
    RIGHT_SIDE INTEGER NOT NULL UNIQUE,
    FULL_BACK INTEGER NOT NULL UNIQUE,
    COGROUP_ID INTEGER NOT NULL UNIQUE,
    ADTEAM_ID INTEGER NOT NULL UNIQUE,
    REPTEAM_ID INTEGER NOT NULL UNIQUE,
    FOREIGN KEY(LOOSE_HEAD_PROP) REFERENCES players(PLAYER_ID),
    FOREIGN KEY(HOOKER) REFERENCES players(PLAYER_ID),
    FOREIGN KEY(TIGHT_HEAD_PROP) REFERENCES players(PLAYER_ID),
    FOREIGN KEY(SECOND_ROW) REFERENCES players(PLAYER_ID),
    FOREIGN KEY(SECOND_ROW2) REFERENCES players(PLAYER_ID),
    FOREIGN KEY(BLIND_SIDE_FLANKER) REFERENCES players(PLAYER_ID),
    FOREIGN KEY(OPEN_SIDE_FLANKER) REFERENCES players(PLAYER_ID),
    FOREIGN KEY(NUMBER_8) REFERENCES players(PLAYER_ID),
    FOREIGN KEY(SCRUM_HALF) REFERENCES players(PLAYER_ID),
    FOREIGN KEY(FLY_HALF) REFERENCES players(PLAYER_ID),
    FOREIGN KEY(LEFT_WING) REFERENCES players(PLAYER_ID),
    FOREIGN KEY(INSIDE_CENTRE) REFERENCES players(PLAYER_ID),
    FOREIGN KEY(OUTSIDE_CENTER) REFERENCES players(PLAYER_ID),
    FOREIGN KEY(RIGHT_SIDE) REFERENCES players(PLAYER_ID),
    FOREIGN KEY(FULL_BACK) REFERENCES players(PLAYER_ID),
    FOREIGN KEY(COGROUP_ID) REFERENCES squad_coaches(COGROUP_ID),
    FOREIGN KEY(ADTEAM_ID) REFERENCES squad_admin_team(ADTEAM_ID),
    FOREIGN KEY(REPTEAM_ID) REFERENCES players(REPTEAM_ID),
CONSTRAINT unique_players UNIQUE (LOOSE_HEAD_PROP,HOOKER,TIGHT_HEAD_PROP,SECOND_ROW,SECOND_ROW2,
BLIND_SIDE_FLANKER,OPEN_SIDE_FLANKER,NUMBER_8,SCRUM_HALF,FLY_HALF,LEFT_WING,INSIDE_CENTRE,OUTSIDE_CENTER,
RIGHT_SIDE,FULL_BACK,COGROUP_ID,ADTEAM_ID,REPTEAM_ID));

CREATE TABLE IF NOT EXISTS junior_squads(
    SQUAD_ID INTEGER PRIMARY KEY,
    SQUAD_NAME TEXT NOT NULL,
    LOOSE_HEAD_PROP INTEGER NOT NULL UNIQUE,
    HOOKER INTEGER NOT NULL UNIQUE,
    TIGHT_HEAD_PROP INTEGER NOT NULL UNIQUE,
    SCRUM_HALF INTEGER NOT NULL UNIQUE,
    FLY_HALF INTEGER NOT NULL UNIQUE,
    CENTRE INTEGER NOT NULL UNIQUE,
    WING INTEGER NOT NULL UNIQUE,
    COGROUP_ID INTEGER NOT NULL,
    ADTEAM_ID INTEGER NOT NULL,
    REPTEAM_ID INTEGER NOT NULL,
    FOREIGN KEY(LOOSE_HEAD_PROP) REFERENCES players(PLAYER_ID),
    FOREIGN KEY(HOOKER) REFERENCES players(PLAYER_ID),
    FOREIGN KEY(TIGHT_HEAD_PROP) REFERENCES players(PLAYER_ID),
    FOREIGN KEY(SCRUM_HALF) REFERENCES players(PLAYER_ID),
    FOREIGN KEY(FLY_HALF) REFERENCES players(PLAYER_ID),
    FOREIGN KEY(CENTRE) REFERENCES players(PLAYER_ID),
    FOREIGN KEY(WING) REFERENCES players(PLAYER_ID),
    FOREIGN KEY(COGROUP_ID) REFERENCES squad_coaches(COGROUP_ID),
    FOREIGN KEY(ADTEAM_ID) REFERENCES squad_admin_team(ADTEAM_ID),
    FOREIGN KEY(REPTEAM_ID) REFERENCES players(REPTEAM_ID),
CONSTRAINT unique_players UNIQUE (LOOSE_HEAD_PROP,HOOKER,TIGHT_HEAD_PROP,
SCRUM_HALF,FLY_HALF,CENTRE,WING,COGROUP_ID,ADTEAM_ID,REPTEAM_ID));

CREATE TABLE IF NOT EXISTS game_location(
    LOCATION_ID INTEGER PRIMARY KEY,
    DESCRIPTION TEXT NOT NULL
);

CREATE TABLE IF NOT EXISTS game_outcomes(
    OUTCOME_ID INTEGER PRIMARY KEY,
    OUTCOME TEXT NOT NULL
);

CREATE TABLE IF NOT EXISTS training_locations(
    LOCATION_ID INTEGER PRIMARY KEY,
    DESCRIPTION TEXT NOT NULL
);

CREATE TABLE IF NOT EXISTS training_session_types(
TYPE_ID INTEGER PRIMARY KEY,
TYPE TEXT NOT NULL
);

CREATE TABLE IF NOT EXISTS training_sessions(
    SESSION_ID INTEGER PRIMARY KEY,
    DATE TEXT NOT NULL,
    LOCATION_ID INTEGER NOT NULL,
    TYPE_ID INTEGER NOT NULL,
    FOREIGN KEY(LOCATION_ID) REFERENCES training_location(LOCATION_ID),
    FOREIGN KEY(SESSION_ID) REFERENCES training_sessions_types(SESSION_ID)
);

CREATE TABLE IF NOT EXISTS clubs(
    CLUB_ID INTEGER PRIMARY KEY,
    NAME TEXT NOT NULL,
    ADDRESS TEXT NOT NULL,
    TELEPHONE TEXT NOT NULL,
    EMAIL TEXT NOT NULL
);

CREATE TABLE IF NOT EXISTS games(
    GAME_ID INTEGER PRIMARY KEY,
    DATE TEXT NOT NULL,
    NB_OF_TRY INTEGER,
    NB_OF_PENALTY_TRY INTEGER,
    NB_OF_PENALTY INTEGER,
    NB_OF_CONVERSION INTEGER,
    NB_OF_DROP_GOAL INTEGER,
    OUTCOME_ID INTEGER,
    CLUB_ID INTEGER NOT NULL,
    LOCATION_ID INTEGER NOT NULL,
    FOREIGN KEY(OUTCOME_ID) REFERENCES game_outcomes(OUTCOME_ID),
    FOREIGN KEY(CLUB_ID) REFERENCES CLUBS(CLUB_ID),
    FOREIGN KEY(LOCATION_ID) REFERENCES GAME_LOCATION(LOCATION_ID)
);


CREATE TABLE IF NOT EXISTS performance_levels(
    LEVEL_ID INTEGER PRIMARY KEY,
    LEVEL_DESCRIPTION TEXT NOT NULL
);

CREATE TABLE IF NOT EXISTS junior_games_played(
    SQUAD_ID INTEGER NOT NULL,
    GAME_ID INTEGER NOT NULL,
    DATE TEXT NOT NULL,
    PRIMARY KEY(SQUAD_ID,GAME_ID),
    FOREIGN KEY(SQUAD_ID) REFERENCES junior_squads(SQUAD_ID),
    FOREIGN KEY(GAME_ID) REFERENCES games(GAME_ID)
);

CREATE TABLE IF NOT EXISTS senior_games_played(
    SQUAD_ID INTEGER NOT NULL,
    GAME_ID INTEGER NOT NULL,
    DATE TEXT NOT NULL,
    PRIMARY KEY(SQUAD_ID,GAME_ID),
    FOREIGN KEY(SQUAD_ID) REFERENCES senior_squads(SQUAD_ID),
    FOREIGN KEY(GAME_ID) REFERENCES games(GAME_ID)
);

CREATE TABLE IF NOT EXISTS training_profiles(
    PROFILE_ID INTEGER PRIMARY KEY,
    PASSING_SKILL INTEGER NOT NULL,
    RUNNING_SKILL INTEGER NOT NULL,
    SUPPORT_SKILL INTEGER NOT NULL,
    TACKLING_SKILL INTEGER NOT NULL,
    DECISION_SKILL INTEGER NOT NULL,
    PLAYER_ID INTEGER NOT NULL UNIQUE,
    FOREIGN KEY(PASSING_SKILL) REFERENCES performance_levels(LEVEL_ID),
    FOREIGN KEY(RUNNING_SKILL) REFERENCES performance_levels(LEVEL_ID),
    FOREIGN KEY(SUPPORT_SKILL) REFERENCES performance_levels(LEVEL_ID),
    FOREIGN KEY(TACKLING_SKILL) REFERENCES performance_levels(LEVEL_ID),
    FOREIGN KEY(DECISION_SKILL) REFERENCES performance_levels(LEVEL_ID),
    FOREIGN KEY(PLAYER_ID) REFERENCES players(PLAYER_ID)
);

CREATE TABLE IF NOT EXISTS player_training_logs(
    PROFILE_ID INTEGER NOT NULL,
    SESSION_ID INTEGER NOT NULL,
    PRIMARY KEY(PROFILE_ID,SESSION_ID),
    FOREIGN KEY(PROFILE_ID) REFERENCES training_profiles(PROFILE_ID),
    FOREIGN KEY(SESSION_ID) REFERENCES training_sessions(SESSION_ID)
);

CREATE TABLE IF NOT EXISTS game_performances(
    PROFILE_ID INTEGER NOT NULL,
    SESSION_ID INTEGER NOT NULL,
    PRIMARY KEY(PROFILE_ID,SESSION_ID),
    FOREIGN KEY(PROFILE_ID) REFERENCES training_profiles(PROFILE_ID),
    FOREIGN KEY(SESSION_ID) REFERENCES training_sessions(SESSION_ID)
);

CREATE TABLE IF NOT EXISTS consent_forms(
    FORM_ID INTEGER PRIMARY KEY,
    DATE_ADDED TEXT NOT NULL,
    PLAYER_ID INTEGER NOT NULL,
    CONSENT_FORM BLOB NOT NULL,
    FOREIGN KEY(PLAYER_ID) REFERENCES players(PLAYER_ID)
);
INSERT INTO performance_levels(level_description) VALUES ('Poor');
INSERT INTO performance_levels(level_description) VALUES ('Developing');
INSERT INTO performance_levels(level_description) VALUES ('Proficient');
INSERT INTO performance_levels(level_description) VALUES ('Advanced');
INSERT INTO performance_levels(level_description) VALUES ('Leading');
INSERT INTO non_players_roles(role_description) VALUES ('Coach');
INSERT INTO non_players_roles(role_description) VALUES ('Chairman');
INSERT INTO non_players_roles(role_description) VALUES ('Fixture Secretary');
INSERT INTO training_locations(description) VALUES ('Main Field');
INSERT INTO training_locations(description) VALUES ('Fitness Suite');
INSERT INTO training_locations(description) VALUES ('Swimming Pool');
INSERT INTO training_session_types(type) VALUES ('Strength');
INSERT INTO training_session_types(type) VALUES ('Endurance');
INSERT INTO training_session_types(type) VALUES ('Core');
INSERT INTO training_session_types(type) VALUES ('Team play');
INSERT INTO training_session_types(type) VALUES ('Tactics');
INSERT INTO game_location(description) VALUES ('Home');
INSERT INTO game_location(description) VALUES ('Away');
INSERT INTO game_outcomes(outcome) VALUES ('Won');
INSERT INTO game_outcomes(outcome) VALUES ('Lost');
INSERT INTO game_outcomes(outcome) VALUES ('Won by Forfeit');
INSERT INTO game_outcomes(outcome) VALUES ('Lost by Forfeit');
INSERT INTO game_outcomes(outcome) VALUES ('Cancelled');